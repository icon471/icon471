#!/bin/bash

echo -e "\nüõ°Ô∏è [ Nikson471 - Full AI OSINT & Pentest Installer 2025 ]"
echo "üì¶ Menyiapkan instalasi semua komponen..."

# Deteksi sistem
if command -v apt >/dev/null 2>&1; then
  sudo apt update && sudo apt upgrade -y
  sudo apt install -y python3 python3-pip git curl wget unzip golang \
  netcat sqlmap hydra nmap exploitdb hashcat gobuster nikto \
  john aircrack-ng wireshark metasploit-framework set beef-xss \
  burpsuite maltego
else
  pkg update -y && pkg upgrade -y
  pkg install python git curl wget -y
  echo "‚ö†Ô∏è Beberapa tools hanya bisa optimal di Kali Linux / Nethunter"
fi

# Python packages
pip install --upgrade pip
pip install openai requests rich gradio

# Setup direktori
mkdir -p ~/Nikson471 && cd ~/Nikson471

# Download CLI script
cat << 'EOF' > nikson471.py
#!/usr/bin/env python3
import openai, requests, os
from rich.console import Console
from rich.prompt import Prompt

console = Console()

def check_api_key():
    api_key = os.getenv("OPENAI_API_KEY")
    if not api_key:
        console.print("[red]‚ùå OPENAI_API_KEY belum ditemukan.[/red]")
        api_key = Prompt.ask("üîê Masukkan OpenAI API Key kamu")
        os.environ["OPENAI_API_KEY"] = api_key
    openai.api_key = os.environ["OPENAI_API_KEY"]

def run_recon(domain):
    console.print(f"[cyan]üîç Scanning: {domain}[/cyan]")
    hasil = ""
    try:
        sub = requests.get(f"https://api.hackertarget.com/hostsearch/?q={domain}").text
        hasil += f"[Subdomain]\n{sub}\n"
        headers = requests.get(f"https://{domain}", timeout=5).headers
        hasil += "[Headers]\n" + "\n".join([f"{k}: {v}" for k,v in headers.items()])
    except:
        hasil += "Gagal koneksi ke target."

    prompt = f"Hasil recon untuk {domain}:\n{hasil}\nAnalisa potensi kerentanan:"
    try:
        res = openai.ChatCompletion.create(model="gpt-3.5-turbo",
            messages=[{"role": "system", "content": "Kamu AI cybersecurity."},
                      {"role": "user", "content": prompt}]
        )
        console.print("\n[green]üí° Hasil AI:[/green]")
        console.print(res.choices[0].message.content)
    except Exception as e:
        console.print(f"[red]Error GPT: {e}[/red]")

if __name__ == "__main__":
    check_api_key()
    target = Prompt.ask("üåê Masukkan domain target")
    run_recon(target)
EOF

# Download GUI script
cat << 'EOF' > nikson471_gui.py
#!/usr/bin/env python3
import gradio as gr, openai, os, requests

def recon_ai(domain, api_key):
    openai.api_key = api_key
    hasil = ""
    try:
        sub = requests.get(f"https://api.hackertarget.com/hostsearch/?q={domain}").text
        hasil += f"[Subdomain Info]\n{sub}\n"
        headers = requests.get(f"https://{domain}", timeout=5).headers
        hasil += "[Headers]\n" + "\n".join([f"{k}: {v}" for k,v in headers.items()])
    except:
        hasil += "Gagal fetch info.\n"

    prompt = f"Recon untuk domain {domain}:\n{hasil}\nBerikan analisis:"
    try:
        res = openai.ChatCompletion.create(
            model="gpt-3.5-turbo",
            messages=[{"role": "system", "content": "Kamu adalah AI cybersecurity"},
                      {"role": "user", "content": prompt}]
        )
        return res.choices[0].message.content
    except Exception as e:
        return f"Gagal AI: {e}"

gr.Interface(fn=recon_ai,
             inputs=["text", "text"],
             outputs="text",
             title="Nikson471 - AI OSINT WebUI",
             description="Masukkan domain dan API Key OpenAI").launch()
EOF

chmod +x nikson471.py nikson471_gui.py

# Info
cat << EOF

‚úÖ Instalasi Selesai: Nikson471 - AI OSINT & Pentest 2025

üß† Jalankan CLI:
  cd ~/Nikson471 && python3 nikson471.py

üåê Jalankan GUI WebUI:
  cd ~/Nikson471 && python3 nikson471_gui.py
  (Akan terbuka di browser lokal: http://127.0.0.1:7860)

üì¶ Tools yang telah terinstall:
- Netcat, Maltego, SET, Metasploit, BeEF, BurpSuite, Wireshark
- SQLmap, Hashcat, Gobuster, Nikto, Hydra, John the Ripper
- Nmap, Aircrack-ng, SearchSploit, Exploit-DB, dll

üîê Pastikan OpenAI API Key tersedia: https://platform.openai.com/account/api-keys

EOF